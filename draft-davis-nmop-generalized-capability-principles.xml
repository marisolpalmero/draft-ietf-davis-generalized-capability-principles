<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.29 (Ruby 2.6.10) -->
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-davis-nmop-generalized-capability-principles-00" category="info" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.30.2 -->
  <front>
    <title abbrev="GenCapPrinc">Generalized Capability Principles</title>
    <seriesInfo name="Internet-Draft" value="draft-davis-nmop-generalized-capability-principles-00"/>
    <author initials="N. R." surname="Davis" fullname="Nigel Robert Davis">
      <organization>Ciena</organization>
      <address>
        <email>ndavis@ciena.com</email>
      </address>
    </author>
    <author initials="C." surname="Cardona" fullname="Camilo Cardona">
      <organization>NTT</organization>
      <address>
        <email>camilo@gin.ntt.net</email>
      </address>
    </author>
    <author initials="D." surname="Lopez" fullname="Diego Lopez">
      <organization>Telefonica</organization>
      <address>
        <email>diego.r.lopez@telefonica.com</email>
      </address>
    </author>
    <author initials="M." surname="Palmero" fullname="Marisol Palmero">
      <organization>Independent</organization>
      <address>
        <email>marisol.ietf@gmail.com</email>
      </address>
    </author>
    <date year="2025" month="October" day="20"/>
    <area>Operations and Management</area>
    <workgroup>NMOP</workgroup>
    <keyword>capability</keyword>
    <keyword>manifest</keyword>
    <keyword>specification</keyword>
    <keyword>representation</keyword>
    <keyword>occurrence</keyword>
    <keyword>component-system</keyword>
    <keyword>pruning&amp;refactoring</keyword>
    <abstract>
      <?line 119?>

<t>This document introduces a framework for capability modeling based on the specification and refinement principles established in ITU-T G.7711 Annex G (also published as ONF TR‑512.7 see latest release) and the modeling boundaries work documented in <tt>draft-davis-netmod-modelling-boundaries</tt>. The framework defines how component–system capabilities can be explicitly described and refined via a process of pruning, refactoring, and occurrence formation.</t>
      <t>These capability definitions can target detailed operational considerations, system interactions, licensing, abstract product declarations, or sales and marketing. The framework supports modular, layered, and fractal declarations of networked behavior, and provides a foundation for a suite of future IETF drafts aligned with ongoing work on photonic plug manifests, entitlement/licensing, IVY equipment modeling, energy/thermal considerations and related domains.</t>
    </abstract>
    <note removeInRFC="true">
      <name>About This Document</name>
      <t>
        The latest revision of this draft can be found at <eref target="https://github.com/marisolpalmero/draft-ietf-davis-generalized-capability-principles/blob/main/draft-davis-nmop-generalized-capability-principles-latest.md"/>.
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-davis-nmop-generalized-capability-principles/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        Network Management Operations  mailing list (<eref target="mailto:nmop@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/nmop/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/nmop/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/marisolpalmero/draft-ietf-davis-generalized-capability-principles"/>.</t>
    </note>
  </front>
  <middle>
    <?line 125?>

<section anchor="terminology">
      <name>Terminology</name>
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT"
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in the
document are to be interpreted as described in RFC2119}}.</t>
      <t>The following terms abbreviations are used in this document:</t>
      <ul spacing="normal">
        <li>
          <t>capability: What can be achieved by an individual item both alone and in assembly (using the component-system pattern)</t>
        </li>
        <li>
          <t>needs: Related to capability, this is what the item, either alone or in assembly, needs to achieve its capabilities</t>
        </li>
        <li>
          <t>manifest: A list of essential contents</t>
        </li>
        <li>
          <t>specification: A detailed description including arrangement</t>
        </li>
        <li>
          <t>representation: An expression of properties from a perspective</t>
        </li>
        <li>
          <t>occurrence: Placeholder</t>
        </li>
        <li>
          <t>component-system: A pattern that expresses each item as a component where components can be assembled into systems and where a system can be represented as a component where that assembly may be of real things or may be abstractions of the effect of real things.</t>
        </li>
        <li>
          <t>pruning:Placeholder</t>
        </li>
        <li>
          <t>refactoring:Placeholder</t>
        </li>
        <li>
          <t>pruning &amp; refactoring: The process that supports progression from one view to the next view</t>
        </li>
        <li>
          <t>capability/needs specification: A detailed description of what can be achived by an individual item both alone and in assembly with respect to specific needs</t>
        </li>
      </ul>
    </section>
    <section anchor="introduction">
      <name>Introduction</name>
      <t>Currently, capabilities are mainly described loosely in human readable text, where that text is often incomplete, ambiguous or inconsistent. While people make these systems work in practice, the looseness result in errors, inefficiencies and limited reuse.
As automation increases, there is a growing need to enable machine reasoning about the capabilities of network systems and components. While Large Language Models (LLMs) can interpret traditional documentation, there remains a strong need for greater formal rigor and structured representation to improve efficiency and precision. When asked, LLMs indicate that a rigorous model is preferable to loose ambiguous text.
Existing IETF models predominantly focus on configuration, operational state, and telemetry. What is missing is a cohesive framework for expressing what a system <em>can</em> do, i.e., its capabilities, in a declarative, structured, and reusable form.
This document introduces the principles for a capability modeling framework grounded in the specification concept established in <xref target="ITU-T_G.7711"/> ([ONF_TR‑512]). It applies these principles through the lens of the <strong>component–system pattern</strong> from <xref target="ONF_TR-512.A.2"/>, using the concept of <strong>emergence through recursive narrowing and occurrence formation</strong>. These ideas are extended further by the modeling boundary principles described in <xref target="mobo"/>.
The result is a standardized and extensible approach for expressing features, operational constraints, internal dependencies, etc. - separately from instance realizations.
This approach supports capability modeling for any aspect of the controlled networking solution, and is designed to enable capability assembly, dynamic composition, licensing control, and integration with other IETF frameworks such as IVY equipment, photonic plug manifests, and entitlement interfaces. It also supports initiatives focussing on energy/thermal considerations where specific detailed capabilities and their power/thermal implications become critical considerations.</t>
    </section>
    <section anchor="problem-statement">
      <name>Problem Statement</name>
      <t>Network technologies and management-control frameworks increasingly rely on declarative data models to represent both configuration and operational state. However, these models often lack a principled way to describe the <em>capabilities</em> of components and systems—what they are able to support or provide, independent of any particular operational instance. This omission makes it difficult to reason about compatibility, constraint satisfaction, composition, or even basic intent feasibility. Clearly, many of these activities take place prior to the installation of the equipment and indeed determine which equipments are to be planned to be installed. In these cases it is not possible to interogate the actual equipment.
Whilst knowing the YANG model for the equipment is beneficial, it is not sufficient as the YANG model essentially provides a space within which actual state etc. can be expresses, but it supports all possible combinations. The equipment will be very limited in comparison.
Often it is desirable from a systems operation perspective to reduce the available capability through policy or other mechanisms due to the restrictions of a specific role. This becomes challenging if the base capability of a component is unclear and expressed in a chaotic form.
In practice, five distinct concerns are often conflated, and also not fully expressed, within data models:
- The <strong>generic definition</strong> of a model element or concept (e.g., a termination point) - this is expressed in YANG. It is a very broad definition encompassing all possible opportunities and ofthen many illegal state combinations etc.
- The <strong>capability definition</strong> of a system or component, i.e., what it can support or expose (e.g., by a specific type or role of termination point). This is not expressed fully in YANG. There are both challenges with the expression of base capability and expression of the capability of combinations. This is especially sparce in representation
- The users <strong>policy definition</strong> for system operation - the user may eliminate particular capabilities due to complexity, lack of trust, regulation etc. and will not want them offered or may not want them offered under certain circumstances. The equipment will be expected to behave as if it does not have the capabilities as approproiate.
- The <strong>system combination</strong> where an entity type may play several different roles and in each role may have specific distinct intentional limitations/restrictions.
- The <strong>operational instance</strong>—what is configured or active at a given time.
Without a clear structural separation and with the sparseness of information on specific capabilities, it becomes challenging to formally describe feature constraints, support boundaries, or internal limitations. Implementers resort to informal documentation, code comments, yellow stickies, or out-of-band agreements to capture the intent behind model behavior. This reduces interoperability, increases integration effort, and undermines automation as a result of
- <strong>Ambiguity</strong> between what a model element <em>is</em> versus what a system <em>can support</em>.
- <strong>Redundancy</strong> and inconsistency in the representation of common constraints (e.g., port types, layering, resource limits).
- <strong>Tooling difficulty</strong> when extracting interoperable subsets of large models or generating technology-specific profiles.
- <strong>Incompatibility</strong> between modular subsystems or plug-ins that must declare and verify their supported features.
Furthermore, current models tend to assume a fixed taxonomy of types and features, rather than supporting a process of recursive refinement. This limits their ability to express how complex capabilities <em>emerge</em> through constraint, composition, and modular pruning of more general-purpose constructs.
What is needed is a modeling framework that:
- Allows systems and components to be described in terms of their <strong>capability boundaries</strong>, including <strong>capability interactions</strong> separate from operational state,
- Supports <strong>refinement via pruning and refactoring to yield flexible structural transformation</strong> rather than rigid inheritance or classification,
- Enables <strong>recursive occurrence formation</strong>, where each stage of narrowing produces a usable semantic structure,
- Accommodates <strong>multiple valid refinement paths</strong>, supporting different levels of granularity and domain specificity,
- Provides a <strong>coherent trace</strong> from abstract capability declarations down to deployable or licensable configurations.
This draft introduces such a framework by building on the refinement logic of <xref target="ITU-T_G.7711"/>  (<xref target="ONF_TR-512"/>) in general and especially the <strong>specification pattern</strong> structures of ITU-T G.7711 Annex G (ONF TR‑512.7) which provides a means of expressing bounded capability envelopes through a formal refinement of generic model elements. This also provides grounding in the recursive occurrence model informed by the component–system pattern <xref target="ITU-T_G.7711"/>  (<xref target="ONF_TR-512.A.2"/> and modeling boundaries approach <xref target="mobo"/>. This document leverages the foundations laid by <xref target="ITU-T_G.7711"/>  (<xref target="ONF_TR-512"/>).</t>
      <t>The same expression challenges appear in statements of intent. The process of formulating intent through negotiation and resultant gradual refinement has a similar feel to the degrees of narrowing of the specification.</t>
    </section>
    <section anchor="specification-in-terms-of-the-model">
      <name>Specification in terms of the Model</name>
      <t>The specification of capability should be presented in terms of the terminology of the problem space and hence in terms of the appropriate model. The challenge is determining which model is the "appropriate" model.</t>
      <t>An area of the problem space can be described in different ways depending upon what the intention of the model is. There are many ways of representing a semantic space/</t>
      <t>Prior to embarking on evaluation of specification of capability, it is important to consider the specific model and how it is structured.</t>
      <ul spacing="normal">
        <li>
          <t>Focus: Semantic area covered at centre and periphery</t>
        </li>
        <li>
          <t>Specialization: Specific detailed focus on an area with rich structure, e.g., PCE, problem analysis, etc.</t>
        </li>
        <li>
          <t>Granularity: the “size” of the semantic units (including the depth of recursion of fractal representations)</t>
        </li>
        <li>
          <t>Phase: The positioning of the semantic boundaries</t>
        </li>
        <li>
          <t>Richness: The detailed coverage within a semantic unit</t>
        </li>
        <li>
          <t>Fidelity: Precision v approximation</t>
        </li>
        <li>
          <t>Abstraction: Closeness to actual detail</t>
        </li>
        <li>
          <t>Maturity: Lifecycle development stage. How stable the model is likely to be. This is primarily about semantics, but also covers syntax.</t>
        </li>
        <li>
          <t>Omission: Gaps and missing parts</t>
        </li>
      </ul>
    </section>
    <section anchor="generalized-modeling-via-componentsystemspecification-refinement">
      <name>Generalized Modeling via Component–System–Specification Refinement</name>
      <t>This framework moves away from rigid classification schemes and instead adopts a dynamic, refinement-based approach to modeling. Traditional classification attempts to impose fixed categories onto a system, but this often obscures nuance, variation, and the emergence of intermediate structures that carry operational or architectural significance.</t>
      <t>We begin instead with the concept of a <strong>universal component</strong>—a general-purpose structure with maximal capability potential. Through the process of <strong>pruning &amp; refactoring</strong> (constraint-driven refinement), this semantic volume is gradually narrowed, yielding intermediate structures with more sharply defined roles and properties. These refined artifacts are not pre-classified entities, but <strong>emergent forms</strong> that arise naturally at specific “sweat spots” in the refinement trajectory, where the remaining capabilities align with a recognizably useful or interoperable function.</t>
      <t>Each such emergent form is treated as an <strong>occurrence</strong>. Occurrences appear at every stage of meaningful refinement including at the level of final implementation instances. At all stages of use the application of properties is via the idea of intent where even the tightest constraint of a single value is essentially a statement of intent (as it is impossible to guarantee that a property will be set). This intent consideration will be dealt with further later in this document.</t>
      <t>An LTP (Logical Termination Point) in <xref target="ITU-T_G.7711"/> (<xref target="ONF_TR-512"/>), for example, is not a primitive class but a pattern that arises from pruning and constraining the universal component until only the semantic envelope of an LTP remains. A TerminationPoint from RFC8345</t>
      <t>To support variation, reusability, and convergence across implementations, each component or system is described not by a single fixed class, but by a <strong>specification</strong>: a constrained and possibly pruned refinement of a more general and broader model element. This allows the model to express bounded capabilities without requiring full instantiation, enabling tools and orchestrators to reason about compatibility, substitution, and support constraints before deployment.
The specification describes the capabilities of an occurrence in terms of occurrences achieved via similar pruning.
A system spec is a pattern assembly of subtly specialized occurrences at a particular level of specialization arranged in a meaningful structure that yields a relevant behaviour.
The specification of an occurrence is itself a system spec.</t>
      <t>The combination of the <strong>component–system pattern</strong> with the <strong>specification refinement pattern</strong> enables a modeling architecture where:</t>
      <ul spacing="normal">
        <li>
          <t>Systems are recursively composed of components,</t>
        </li>
        <li>
          <t>Specifications constrain and refine capabilities at each level,</t>
        </li>
        <li>
          <t>Occurrences are layered realizations of specs applied to specific contexts or configurations.</t>
        </li>
      </ul>
      <t>This approach supports <strong>gradual realization</strong>, where capability declarations can progressively transition from abstract to concrete, through intermediate spec refinements and pruning. Each layer of model realization adds specificity—structurally (via system composition), behaviorally (via constraints), and operationally (via mapping to configuration/state models).</t>
      <t>A specification may provide explicit definifinition of a property as discussed above but it may also refer to one or more other specification(s). For example a specification may include a set of properties specified elsewhere. It may also define a property that is an enumeration of literals or identifies where those literal values or identify values are actually references to other specifications that provide deeper detail.</t>
      <t>In an ideal environment, there is an ecosystem of specificactions each providing interrelated detail to fully define the semantics. The ecosystem would include specifications from standards bodies providing the definition of a network protocol that can be interpreted by an AI component such that the abstracted effect on the solution can be fully understood and simulated/emulated. Any detected conditions would be understood in terms of the protocol and hence the implications of the condition detected in terms of the carried signal can be fully understood.</t>
      <t>Today's solution at best have a coded form of the semantic mantic interpretation that may not reflect the formal definition due to inaccuracies of interpretation. Many semantics are reduced to inconsistent labels that a user has to interpret. Whilst an LLM can do a reasonable job at interpretation of chaotic data, it will benefit a rigorous model traceable through formal definitions to fundamentals.</t>
    </section>
    <section anchor="some-specification-examples">
      <name>Some specification examples</name>
      <t>This section will provide some examples and will reference the equipment capability draft and other future drafts.</t>
    </section>
    <section anchor="recursive-narrowing">
      <name>Recursive narrowing</name>
      <t>This builds on the example sketches and formalizes the process of recursive narrowing.
Ahow the essential process.
Use examples to illustrate the process
-Thing to Component to Function to TP to specific TP to application of TP to instance of TP.
-Thing to Component to physical thing to equipment to specific equipment type to use of that equipment to instance of equipment
-A plug example
Circle back and relate this more rigorous section to the specification examples.</t>
    </section>
    <section anchor="specification-of-an-assembly">
      <name>Specification of an assembly</name>
      <t>Build on the examples and the recursive narrowing to explain the subtle narrowings in a system/scheme spec. Describe the essential process.
Use examples to illustrate the progression:
- Same examples as recursive narrowing but focus on role and subtle specializations in role
List other examples.</t>
    </section>
    <section anchor="generalization-of-the-specification">
      <name>Generalization of the specification</name>
      <t>Build a specification structure from the examples and show the references and reuses.
Explain how the specification relates to the things in the problem space.
Lay out the specification structure.</t>
    </section>
    <section anchor="characteristics-of-a-language-of-specification">
      <name>Characteristics of a language of specification</name>
      <t>The language needs inherent capabilities (as opposed to after the fact bolt-on warts)
Extract key characteristics from above and from mobo
- narrowing requires specific redefine (relate to pruning)
- occurrence is an assembly of constrained type and specific values
- need to reference other specs as reusable parts
- refactoring, minor specialization and assembly
- interrelationship and influence
- uncertainty and preferences
(Need to review mobo and TR-547 spec, component-system etc.)</t>
    </section>
    <section anchor="specification-language-options">
      <name>Specification language options</name>
      <t>Landscape of languages... does anything do this?
Take YANG and enhance (as discussed in mobo)</t>
    </section>
    <section anchor="building-a-specification-structure">
      <name>Building a specification structure</name>
      <t>Tooling and support to build and interrelate.
Catalogue/library of specs
Deep application... machine interpretable structure in all standards
Use of AI to reverse engineer specs with guidance... peer review and testing cycle</t>
    </section>
    <section anchor="a-specification-evolution-example">
      <name>A specification evolution example</name>
      <t>Discuss how a spec may change as understanding emerges and how it may be refactored.</t>
    </section>
    <section anchor="a-system-specification-example">
      <name>A system specification example</name>
      <t>Take the language considerations and set out system specs in a more formal way</t>
    </section>
    <section anchor="broader-application-of-the-language">
      <name>Broader Application of the Language</name>
      <t>Negotiation
Refinement of planning
Development of standards
Expression of uncertainty and pattern</t>
    </section>
    <section anchor="conclusion">
      <name>Conclusion</name>
      <t>Mindset Change
Language challenges
Use of AI
Target is an ecosystem of specs driving agentic components...</t>
    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <t>TBD</t>
    </section>
    <section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <t>This document has no IANA actions.</t>
    </section>
  </middle>
  <back>
    <references anchor="sec-combined-references">
      <name>References</name>
      <references anchor="sec-normative-references">
        <name>Normative References</name>
        <reference anchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
      </references>
      <references anchor="sec-informative-references">
        <name>Informative References</name>
        <reference anchor="BaseInventory">
          <front>
            <title>A Base YANG Data Model for Network Inventory</title>
            <author fullname="Chaode Yu" initials="C." surname="Yu">
              <organization>Huawei Technologies</organization>
            </author>
            <author fullname="Sergio Belotti" initials="S." surname="Belotti">
              <organization>Nokia</organization>
            </author>
            <author fullname="Jean-Francois Bouquier" initials="J." surname="Bouquier">
              <organization>Vodafone</organization>
            </author>
            <author fullname="Fabio Peruzzini" initials="F." surname="Peruzzini">
              <organization>FiberCop</organization>
            </author>
            <author fullname="Phil Bedard" initials="P." surname="Bedard">
              <organization>Cisco</organization>
            </author>
            <date day="14" month="October" year="2025"/>
            <abstract>
              <t>   This document defines a base YANG data model for reporting network
   inventory.  The scope of this base model is set to be application-
   and technology-agnostic.  The base data model can be augmented with
   application- and technology-specific details.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-ivy-network-inventory-yang-11"/>
        </reference>
        <reference anchor="ITU-T_G.7711" target="https://www.itu.int/rec/T-REC-G.7711/recommendation.asp?lang=en&amp;parent=T-REC-G.7711-202202-I)">
          <front>
            <title>Generic….</title>
            <author>
              <organization/>
            </author>
            <date year="2022" month="August" day="31"/>
          </front>
        </reference>
        <reference anchor="ivy" target="https:// 3.pdf">
          <front>
            <title>ivy</title>
            <author>
              <organization/>
            </author>
            <date year="2022" month="August" day="31"/>
          </front>
        </reference>
        <reference anchor="plug" target="https:// 3.pdf">
          <front>
            <title>plug</title>
            <author>
              <organization/>
            </author>
            <date year="2022" month="August" day="31"/>
          </front>
        </reference>
        <reference anchor="mobo" target="https:// 3.pdf">
          <front>
            <title>draft-davis-netmod-modelling-boundaries</title>
            <author>
              <organization/>
            </author>
            <date year="2022" month="August" day="31"/>
          </front>
        </reference>
        <reference anchor="ONF_TR-512" target="https://opennetworking.org/wp-content/uploads/2021/11/TR-512_v1.5_OnfCoreIm-info.zip">
          <front>
            <title>TR-512 Core Information Model (CoreModel) v1.5</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="ONF_TR-512.A.2" target="https://opennetworking.org/wp-content/uploads/2021/11/TR-512_v1.5_OnfCoreIm-info.zip">
          <front>
            <title>TR-512.A.2 Appendix: Model Structure, Patterns and Architecture</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="ONF_TR-512.8" target="https://opennetworking.org/wp-content/uploads/2021/11/TR-512_v1.5_OnfCoreIm-info.zip">
          <front>
            <title>TR-512.8 Control</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="ONF_TR-512.7" target="https://opennetworking.org/wp-content/uploads/2021/11/TR-512_v1.5_OnfCoreIm-info.zip">
          <front>
            <title>TR-512.7 Specification</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="LF_TAPI" target="https://github.com/Open-Network-Models-and-Interfaces-ONMI/TAPI-Home">
          <front>
            <title>Transport API</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
      </references>
    </references>
    <?line 300?>

<section anchor="appendix-a-interpretive-notes-on-refinement-and-occurrence">
      <name>Appendix A: Interpretive Notes on Refinement and Occurrence</name>
      <section anchor="a1-no-single-refinement-path">
        <name>A.1 No Single Refinement Path</name>
        <t>In this modeling approach, there is no single correct way to refine a universal component. The refinement process supports multiple valid paths, each representing a different semantic purpose, level of granularity, or domain context. What emerges depends not on a fixed taxonomy, but on the alignment of constraints, intent, and reuse patterns.</t>
        <t>This enables:
- Coexistence of multiple specification layers derived from the same abstract element,
- Domain-specific “semantic phases” that are meaningful within a particular stack (e.g., optical vs packet),
- Purpose-driven modeling: e.g., one path for plug manifests, another for logical topology.</t>
      </section>
      <section anchor="a2-occurrence-at-every-layer">
        <name>A.2 Occurrence at Every Layer</name>
        <t>Occurrences are not limited to final instances. Each meaningful stage of refinement produces an occurrence—an intent-aligned, constrained projection of the universal component. Even so-called “instances” are not full realizations, but expressed intent within a given operational context.</t>
      </section>
      <section anchor="a3-sweating-out-the-shape">
        <name>A.3 Sweating Out the Shape</name>
        <t>Useful structural forms (e.g., an LTP) are not pre-classified primitives. They <em>emerge</em> from the pruning process when remaining capabilities reach a “sweat spot” of balance—enough constraints to be meaningful, but not so much as to be frozen. This allows the model to remain adaptive while still supporting mapping, reasoning, and automation.</t>
      </section>
      <section anchor="a4-classification-considered-harmful">
        <name>A.4 Classification Considered Harmful</name>
        <t>Rigid classification schemes tend to obscure natural emergence and lead to artificial separations. This model rejects top-down typing in favor of bottom-up capability surfacing, grounded in refinement logic. Semantic rigor replaces taxonomic rigidity.</t>
      </section>
    </section>
    <section anchor="acknowledgments">
      <name>Acknowledgments</name>
      <t>This document has been made with consensus and contributions coming from multiple drafts with different visions. We would like to thank all the participants in the IETF meeting discussions.</t>
    </section>
    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
      <name>Contributors</name>
      <contact initials="N." surname="Davis" fullname="Nigel Davis">
        <organization>Ciena</organization>
        <address>
          <email>ndavis@ciena.com</email>
        </address>
      </contact>
    </section>
  </back>
  <!-- ##markdown-source:
H4sIAI2t9mgAA8Vc7Y4jx3X9z6dojABnhyA5WkmGlAEMazS7Kw0w+5HdUQxD
MOQmWSTb2+xmurpnlgoM6BWC5GfyNw+mJ8k5996qru6ZkRzbSALHniW7q27d
z3M/ivP5fNIWbenOs5OvXeWavCx+cOvsMj/ky6Is2mP2pimqVXEonT+Z5Mtl
4271WTwiX51M1vWqyvdYYt3km3a+zm8LP6/29WG+7Zecr+KS80Nccv7xx5NV
3rpt3RzPs6La1BPf5tX6+7ysK6zYNp2bTHy33BfeF3XVHg/49Or5zYss+yjL
S1+DmKJau4PDf1XtySw7ubr4Cv9TN/jr7c2Lk0nV7ZeuOZ+ssc/5ZFVX3lW+
87Y4TvPpJG9cjoVeH0Bti218Bhqyl3mVb92ey07utvj+1cvXb04m7+/OJ9k8
68/Df+3zqtg43/Jvf3CrYlOsZCl+0LhD47BrGz+pV6uuaVy1crJUvT/guFU7
90ffuj0/OzRdVVTbXzVuk6/aGhzbTm5d1eEIWbZt6u5Aglx7VzfvE0qz/gwn
eFD5dcI/93lR4k/K5cvCtZtF3Wz5ed6sdvh817YHf352xsf4UXHrFuGxM35w
tmzqO+/OuMAZX9wW7a5b4tV93hS+Lg95uXdNfaZawHdNFX5RC7haCen4NiFE
l1+AN2d/8wZny7Je8mjV2V+ho0raYr8+mUzyrt3VUCaICERnUFko0qtF9naR
PeOa8qFaw6ti68rsbQ3la5Mvwc/z7LJwVS7/dCqXSij6csXPeebhBpcLWGSz
ru0dXf8y3xdlPfgCa0MPfxD5g4Cbm3SLk5W88OW2qBZV2y4qB70ebPNskV3X
B/dDssmzAraZfDrc4caVblNXUPXBRmu+tGgWJV/7so0P8WCjLV8usjcq1mTT
lyrvwTfCtqve0tMNTT9EX7/c8jNlIY29bYpl16rIRjJ7WGD/e0lNqrrZgyO3
TjZ5++Lyk6dP//Fc//zi6eef4eMJfVv6VPZV7t1VBZNuxfddzZ8J/fPi9jiv
1K7nRfh+fsxh/3zt6ubb+c33Xy8+//zp03Ohq/+/gScvVj/9+N+Lk9Ej4gSz
Tz7+5JP5x1/MP306XiFvtg5WGIzw7u5uUbTdoqjas8atzm7mb59fznV3flDv
4XTWog2L3B9+W4LM37jqVwd41Kr9Tfr4nJt+/Mn86lTOgWM+Rj6++hvJzj5d
HNYb2edQdtvHNuJ3f7+d9vWyfmyngddx7b5ez/H/rizh1ufLugMPm0Id4d+H
mNevXnx/83b+66efPEJSdqJfZ5d142BYpp11lb0kYdkTfi5/nma3Txe/HpM2
3humXpna4kwSNe4OcxogFOGsO5R1vvZnOMrTM6iO7v09F/7+dbXhXlf7OW1k
8UNxGJ1gcbH4pVPwkeziQN9QfDi3I7xDgF+1XeNm8CRt6xqL6xcMb62Tr/4/
j/XFLx3qCwgHDqwu/z+p/PyXqPw8e5cCnv9bWrnZNWi9eHP1OJ1NXvlDjSiM
p36JvAR2AEpVc4NYc1EpP4f+zK9AagNUBmjw+tXLqzNuPv+m3gOpTubzeZYv
fdsAtE0mN7vCZ4DHnUCzgrJcd3gvy7NNg5gj4A2Wl4DJTPwCOJMtESDWGQyy
3bkhphQtBjAsKsV8PVbJAFTyZVn4HV4tKo0WmTrg7AJ8/5B9nT0hbs4OXXgu
95R3dvP2px//TQXqnTNAhm1KB0JOZU9S0tMX3VYm5wjn1J3/+Be6vD8ushus
2rNjLefy2a6+64HxTz/+u0LjnlPcd5VX2dJl7sOhLFYQ9xFv+xUiPk8VebTO
boscLD80NXjvs3oT0PUsS+D1TF7pkXkWXeKCkgSAT8UkZBaaLJAM1SN83AIl
UG4Bh+dlxpyjWAdcPsvsKAX1CLvrhzgB8hKlwxSIFENfuOoKoDy8Dn3xOYVN
eoF93ruWljTio+8O1HlPgXV4GzvkR9e4tZ5zww1AW7o0OWOmiRMs3Q7Cqxt9
HqTc4gyiuiI8UUTqbo6t4E758qajT9X8TOSPx8tiSxHcwa6gzNuaqiME4vXD
rm6JDCVKxxwKR4TIab1Up7OEMVf//PvM/UtXHETtgybycddsj2dQT0hszG/T
BOrzGkrKLMAv1FL3xXpdwmw/usGLRVWX9fZIUWfv3ZFErn128vLbdzdMK/m/
2avX8vfb5//07dXb58/497tvLq6v4x/yxAR/v/722r7mX/2Ll69fvnz+6pm+
+/Li9yfK3pPXb26uXr+6uD6h8eAgk+g2AKWytqaei8IglWzVaHtdxyuGOv/8
Z1VWSKYs6zsyG+/swQRJ3YvAEqzZeX2zTZ0UsOk0UfPz7He7vA12liNuuluq
xhFE4911AZ3owPGC+rysIWJJ3OVIWDr33u2XMMsnnRdSQNg42c0OGptPsXHl
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
z/WHk936NyebvPTu5M+T/wE37z+TL1oAAA==

-->

</rfc>
